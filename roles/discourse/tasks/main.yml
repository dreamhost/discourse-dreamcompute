---
- name: create ext4 filesystem on discourse volume
  filesystem:
    dev: "/dev/vdb"
    fstype: ext4

- name: create mountpoint for discourse volume at /var/discourse
  file:
    mode: 0700
    path: "/var/discourse"
    state: directory

- name: mount the discourse volume at /var/discourse
  mount:
    fstype: ext4
    src: "/dev/vdb"
    state: mounted
    name: "/var/discourse"

- name: set vm.overcommit_memory = 1
  sysctl:
    name: vm.overcommit_memory
    value: 1

- name: set net.core.somaxconn = 512
  sysctl:
    name: net.core.somaxconn
    value: 512

- name: disable transparent hugepage
  shell: 'echo "never" > /sys/kernel/mm/transparent_hugepage/enabled'

- name: install docker gpg key
  shell: 'curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -'

- name: add docker official repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu trusty stable"
    state: present

- name: prepare docker install
  apt: name="{{ item }}" state=installed update_cache=yes
  with_items:
     - apt-transport-https
     - ca-certificates
     - curl
     - software-properties-common
     - linux-image-extra-virtual
     - docker-ce

- name: reboot for new kernel modules to be available
  command: /sbin/reboot

- name: wait for reboot
  wait_for: port=22 host="{{ ansible_host|default(ansible_ssh_host|default(inventory_hostname)) }}" search_regex=OpenSSH delay=10
  sudo: no
  connection: local

- name: load AUFS module
  modprobe:
    name: aufs
    state: present

- name: force docker to use AUFS
  shell: 'echo "DOCKER_OPTS=\"-s aufs\"" >> /etc/default/docker'

- name: restart docker
  service:
    name: docker
    state: restarted

- name: clone discourse docker repo to /var/discourse/discourse_docker
  git:
    repo: "https://github.com/discourse/discourse_docker.git"
    dest: "/var/discourse/discourse_docker"

- name: create app.yml file
  template:
    src: templates/app.yml.j2
    dest: "/var/discourse/discourse_docker/containers/app.yml"
    owner: root
    group: root
    mode: 0600
  register: appconfig

- name: Rebuild discourse with new config
  shell: "./launcher rebuild app"
  args:
    chdir: /var/discourse/discourse_docker
  when: appconfig.changed

- name: Notify user of IP
  debug:
    msg: "Discourse has been deployed at {{ inventory_hostname }}"
